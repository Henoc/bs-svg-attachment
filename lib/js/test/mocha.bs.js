// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Pervasives      = require("bs-platform/lib/js/pervasives.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var AssertionError = Caml_exceptions.create("Mocha-BsSvgAttachment.AssertionError");

function shouldTrue(label, value) {
  if (value) {
    return 0;
  } else {
    throw [
          AssertionError,
          "at " + label
        ];
  }
}

function floatEq(label, value1, value2) {
  if (value1 !== value2) {
    var v1str = Pervasives.string_of_float(value1);
    var v2str = Pervasives.string_of_float(value2);
    throw [
          AssertionError,
          "at " + (label + (", " + (v1str + (" not equal " + v2str))))
        ];
  } else {
    return 0;
  }
}

function intEq(label, value1, value2) {
  if (value1 !== value2) {
    var v1str = Pervasives.string_of_int(value1);
    var v2str = Pervasives.string_of_int(value2);
    throw [
          AssertionError,
          "at " + (label + (", " + (v1str + (" not equal " + v2str))))
        ];
  } else {
    return 0;
  }
}

function stringEq(label, value1, value2) {
  if (value1 !== value2) {
    throw [
          AssertionError,
          "at " + (label + (", " + (value1 + (" not equal " + value2))))
        ];
  } else {
    return 0;
  }
}

function fail(label) {
  throw [
        AssertionError,
        "at " + label
      ];
}

exports.AssertionError = AssertionError;
exports.shouldTrue     = shouldTrue;
exports.floatEq        = floatEq;
exports.intEq          = intEq;
exports.stringEq       = stringEq;
exports.fail           = fail;
/* No side effect */
