// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Box                     = require("./box.bs.js");
var Svg                     = require("./svg.bs.js");
var List                    = require("bs-platform/lib/js/list.js");
var Vec2                    = require("./vec2.bs.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function makeBox(elems) {
  if (elems) {
    var _elems = elems[1];
    var _acc = Box.getBBox(elems[0]);
    while(true) {
      var acc = _acc;
      var elems$1 = _elems;
      if (elems$1) {
        _acc = Box.merge(acc, Box.getBBox(elems$1[0]));
        _elems = elems$1[1];
        continue ;
        
      } else {
        return acc;
      }
    };
  } else {
    throw Caml_builtin_exceptions.not_found;
  }
}

function getLeftTop(elems) {
  return makeBox(elems)[/* leftTop */0];
}

function setLeftTop(vec2, elems) {
  var delta = Vec2.$neg$caret(vec2, makeBox(elems)[/* leftTop */0]);
  List.map((function (e) {
          return Svg.move(delta, e);
        }), elems);
  return /* () */0;
}

function getRightBottom(elems) {
  return makeBox(elems)[/* rightBottom */1];
}

function setRightBottom(vec2, elems) {
  var delta = Vec2.$neg$caret(vec2, makeBox(elems)[/* rightBottom */1]);
  List.map((function (e) {
          return Svg.move(delta, e);
        }), elems);
  return /* () */0;
}

function getCenter(elems) {
  var box = makeBox(elems);
  return Vec2.$slash$caret(Vec2.$plus$caret(box[/* leftTop */0], box[/* rightBottom */1]), /* float array */[
              2.0,
              2.0
            ]);
}

function setCenter(vec2, elems) {
  var delta = Vec2.$neg$caret(vec2, getCenter(elems));
  List.map((function (e) {
          return Svg.move(delta, e);
        }), elems);
  return /* () */0;
}

function zoom(ratio, elems) {
  var center = getCenter(elems);
  return List.map((function (e) {
                Svg.zoom(ratio, e);
                var v = Svg.getCenter(e);
                Svg.setCenter(Vec2.$plus$caret(Vec2.$star$caret(v, ratio), Vec2.$star$caret(Vec2.$neg$caret(/* float array */[
                                  1.0,
                                  1.0
                                ], ratio), center)), e);
                return /* () */0;
              }), elems);
}

function getSize(elems) {
  var box = makeBox(elems);
  return Vec2.$neg$caret(box[/* rightBottom */1], box[/* leftTop */0]);
}

function setSize(vec2, elems) {
  var ratio = Vec2.$slash$caret(vec2, getSize(elems));
  return zoom(ratio, elems);
}

exports.makeBox        = makeBox;
exports.getLeftTop     = getLeftTop;
exports.setLeftTop     = setLeftTop;
exports.getRightBottom = getRightBottom;
exports.setRightBottom = setRightBottom;
exports.getCenter      = getCenter;
exports.setCenter      = setCenter;
exports.zoom           = zoom;
exports.getSize        = getSize;
exports.setSize        = setSize;
/* Box Not a pure module */
